{"version":3,"sources":["store.js","User.js","TodoItem.js","TodoList.js","GetTodosWithUsers.js","api/getUrl.js","Main.js","App.js","index.js"],"names":["store","createStore","state","action","type","Object","objectSpread2","todos","loaded","isLoading","User","_ref","user","react_default","a","createElement","name","connect","dispatch","settodos","newSetData","todo","status","completed","className","id","title","src_User","onClick","filteredTodos","filter","deleteItem","TodoList","props","map","src_TodoItem","key","getTodosWithUsers","users","find","userId","getUrl","URL","fetch","then","todolist","json","newtodos","setLoaded","changeLoaded","setIsLoading","changeIsLoading","_ref2","_ref3","usersObject","todosObject","regenerator_default","async","_context","prev","next","awrap","Promise","all","getURL","sent","slicedToArray","stop","src_TodoList","App","src_Main","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.8ab19cad.chunk.js","sourcesContent":["import { createStore } from 'redux';\n\nconst rootReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE_ROW':\n      return {\n        ...state,\n        todos: action.todos,\n      };\n\n    case 'CHANGE_LOADED': {\n      return {\n        ...state,\n        loaded: action.loaded,\n      };\n    }\n\n    case 'CHANGE_IS_LOADING': {\n      return {\n        ...state,\n        isLoading: action.isLoading,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst initialState = {\n  todos: [],\n  loaded: false,\n  isLoading: false,\n};\n\nconst store = createStore(rootReducer, initialState);\n\nexport default store;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nfunction User({ user }) {\n  return <td>{user.name}</td>;\n}\n\nUser.propTypes = { user: PropTypes.objectOf(PropTypes.any).isRequired };\n\nexport default User;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport User from './User';\n\nconst TodoItem = ({ todo, todos, settodos }) => {\n  const status = (todo.completed) ? 'done' : 'in progress';\n\n  const deleteItem = (id) => {\n    const filteredTodos = todos.filter(todos => todos.id !== id);\n\n    settodos(filteredTodos);\n  };\n\n  return (\n    <tr className=\"row\">\n      <td className=\"rowOfTasks\">{todo.id}</td>\n      <td className=\"rowOfTasks\">{todo.title}</td>\n      <User user={todo.user} />\n      <td className=\"rowOfTasks last_cell\">\n        {status}\n        <button\n          type=\"button\"\n          className=\"delete_button\"\n          onClick={() => (\n            deleteItem(todo.id)\n          )}\n        >\n          x\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nconst mapStateToProps = state => ({\n  todos: state.todos,\n});\n\nconst setmapStateToProps = (dispatch) => ({\n  settodos: newSetData => dispatch({\n    type: 'CHANGE_ROW',\n    todos: newSetData,\n  }),\n});\n\nTodoItem.propTypes = {\n  todo: PropTypes.objectOf(PropTypes.any).isRequired,\n  todos: PropTypes.arrayOf(PropTypes.any).isRequired,\n  settodos: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, setmapStateToProps)(TodoItem);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport TodoItem from './TodoItem';\n\nconst TodoList = props => (\n  <table>\n    <thead>\n      <tr className=\"head\">\n        <td>ID</td>\n        <td>Title</td>\n        <td>User name</td>\n        <td>Status</td>\n      </tr>\n    </thead>\n    <tbody>\n      {props.todos.map(todo => (\n        <TodoItem\n          todo={todo}\n          key={todo.id}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.any).isRequired,\n};\n\nexport default TodoList;\n","function getTodosWithUsers(todos, users) {\n  return (todos.map(todo => (\n    {\n      ...todo,\n      user: users.find(user => user.id === todo.userId),\n    }\n  )));\n}\n\nexport default getTodosWithUsers;\n","const getUrl = URL => fetch(URL)\n  .then(todolist => todolist.json());\n\nexport default getUrl;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport TodoList from './TodoList';\nimport getTodosWithUsers from './GetTodosWithUsers';\nimport store from './store';\nimport getURL from './api/getUrl';\n\nfunction Main({\n  todos,\n  settodos,\n  loaded,\n  setLoaded,\n  isLoading,\n  setIsLoading,\n}) {\n  const LoadTodos = async() => {\n    setIsLoading(true);\n\n    const [usersObject, todosObject]\n    = await Promise.all([\n      getURL('https://jsonplaceholder.typicode.com/users'),\n      getURL('https://jsonplaceholder.typicode.com/todos'),\n    ]);\n\n    settodos(getTodosWithUsers(todosObject, usersObject));\n    setIsLoading(false);\n    setLoaded(true);\n  };\n\n  if (isLoading === true) {\n    return (\n      <div className=\"App\">\n        <p> ...LOADING </p>\n      </div>\n    );\n  }\n\n  if (loaded === false) {\n    return (\n      <div className=\"App\">\n        <button type=\"button\" onClick={LoadTodos}>\n          Load\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <TodoList todos={todos} />\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  todos: state.todos,\n  loaded: state.loaded,\n  isLoading: state.isLoading,\n});\n\nconst dataMethods = () => ({\n  settodos: newtodos => store.dispatch({\n    type: 'CHANGE_ROW',\n    todos: newtodos,\n  }),\n  setLoaded: changeLoaded => store.dispatch({\n    type: 'CHANGE_LOADED',\n    loaded: changeLoaded,\n  }),\n  setIsLoading: changeIsLoading => store.dispatch({\n    type: 'CHANGE_IS_LOADING',\n    isLoading: changeIsLoading,\n  }),\n});\n\nMain.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.any).isRequired,\n  settodos: PropTypes.func.isRequired,\n  loaded: PropTypes.bool.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  setLoaded: PropTypes.func.isRequired,\n  setIsLoading: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, dataMethods)(Main);\n","import React from 'react';\nimport './App.css';\n\nimport Main from './Main';\n\nfunction App() {\n  return (\n    <Main />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}